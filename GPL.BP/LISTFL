* LISTFL
* LIST.FILES command - Display details of open files.
* Copyright (c) 2003 Ladybridge Systems, All Rights Reserved
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software Foundation,
* Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
* 
* Ladybridge Systems can be contacted via the www.openqm.com web site.
* 
* START-HISTORY:
* 18 Oct 04  2.0-5 Use message handler.
* 16 Sep 04  2.0-1 OpenQM launch. Earlier history details suppressed.
* END-HISTORY
*
* START-DESCRIPTION:
*
* END-DESCRIPTION
*
* START-CODE

$internal
program listfl
$catalogue $listfl

$include int$keys.h
$include err.h
$include parser.h

   parser = '!PARSER'
   @system.return.code = -ER$ARGS      ;* Preset for command format errors

* ---------------  Step 1 -  Parse the command

   detail = @false

   call @parser(parser$reset, 0, @sentence, 0)
   call @parser(parser$get.token, token.type, token, keyword) ;* Verb

   loop
      call @parser(parser$get.token, token.type, token, keyword)
   until token.type = PARSER$END
      begin case
         case keyword = KW$DETAIL
            detail = @true

         case 1
            stop sysmsg(2018, token) ;* Unexpected token (xx)
      end case
   repeat

   list = system(1003)
   num.files = dcount(list,@fm)

   display sysmsg(6490, num.files, system(1004), config('NUMFILES'))
   * Number of files open = %1.  Peak = %2.  Limit = %3.

   if detail then
      display

      for i = 1 to num.files
         display list<i,2>
      next i
   end

   @system.return.code = 0

   return
end

* END-CODE
