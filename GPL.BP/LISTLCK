* LISTLCK
* LIST.LOCKS command
* Copyright (c) 2004 Ladybridge Systems, All Rights Reserved
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software Foundation,
* Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
* 
* Ladybridge Systems can be contacted via the www.openqm.com web site.
* 
* START-HISTORY:
* 13 Oct 04  2.0-5 Use message handler.
* 16 Sep 04  2.0-1 OpenQM launch. Earlier history details suppressed.
* END-HISTORY
*
* START-DESCRIPTION:
*
*    LIST.LOCKS
*
* END-DESCRIPTION
*
* START-CODE


$internal
program $list.locks
$catalog $listlck

$include parser.h
$include err.h

   parser = "!PARSER"

   @system.return.code = -ER$ARGS      ;* Preset for command format errors

* ---------------  Step 1 -  Check no command arguments

   call @parser(parser$reset, 0, @sentence, 0)
   call @parser(parser$get.token, token.type, token, keyword) ;* Verb

   call @parser(parser$get.token, token.type, token, keyword) ;* Verb
   if token.type # PARSER$END then stop sysmsg(2018, token) ;* Unexpected token (xx)
   
   @system.return.code = 0

* ---------------  Step 2  -  Display list of reserved locks

   break off         ;* Don't allow break holding temporary lock

   dim lock.owner(63)
   mat lock.owner = ''

   lock.found = @false
   for i = 0 to 63
      j = testlock(i)
      if j then
         lock.found = @true
         lock.owner(i) = j
      end
   next i

   if lock.found then
      for i = 0 to 63
         display fmt(i, "2R") : ': ' :

         if lock.owner(i) = @userno then lock.owner(i) := '*'

         display fmt(lock.owner(i), "5L") :

         if rem(i, 8) = 7 then display
      next i
      display
   end else
      display sysmsg(6452) ;* No task locks reserved by any user
   end

   break on

   return
end

* END-CODE
