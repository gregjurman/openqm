* _MSGARGS
* SYSMSG argument substitution.
* Copyright (c) 2004 Ladybridge Systems, All Rights Reserved
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software Foundation,
* Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
* 
* Ladybridge Systems can be contacted via the www.openqm.com web site.
* 
* START-HISTORY:
* 20 Sep 04  2.0-2 New module.
* 16 Sep 04  2.0-1 OpenQM launch. Earlier history details suppressed.
* END-HISTORY
*
* START-DESCRIPTION:
*
* Substitutions:
*   %1 - %4   Arguments from SYSMSG() call
*   %S        STATUS()
*   %E        OS.ERROR()
*   %M        ERRTEXT(STATUS())
*
* END-DESCRIPTION
*
* START-CODE

$internal
$no.symbols
$no.xref
$recursive

subroutine msgargs(text, arg1, arg2, arg3, arg4, process.status, os.error)
   deffun errtext(s) calling "!ERRTEXT"

   n = len(text)
   for i = 1 to n
      if text[i, 1] = '%' then
         c = text[i+1, 1]
         begin case
            case c = '1' ; subst = arg1
            case c = '2' ; subst = arg2
            case c = '3' ; subst = arg3
            case c = '4' ; subst = arg4
            case c = 'S' ; subst = process.status
            case c = 'E' ; subst = os.error
            case c = 'M' ; subst = errtext(process.status)
            case c = '%' ; subst = '%'
            case 1       ; subst = ''
         end case

         text = text[1, i-1]:subst:text[i+2, 99999] ; i += len(subst)
         n = len(text)  ;* Re-evaluate end position
      end
   next i

   return value text
end

* END-CODE
